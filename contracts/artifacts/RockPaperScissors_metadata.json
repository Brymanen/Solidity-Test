{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "playerInput",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "computerChoice",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "gameOutcome",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "outputMessage",
						"type": "string"
					}
				],
				"name": "NewGame",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "gameToOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "games",
				"outputs": [
					{
						"internalType": "string",
						"name": "playerInput",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "computerChoice",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "gameOutcome",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "outputMessage",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "ownerGamesCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "playerInput",
						"type": "string"
					}
				],
				"name": "playRockPaperScissors",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/rock_paper_scissors.sol": "RockPaperScissors"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ownable.sol": {
			"keccak256": "0x6cb4d61b238489448ee96a576490fd5c96b48362cbaa7a29a48bfe58aa9c08c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://b379614615fc8d78b07279d89bc621913bdd0e59af03d91a0213a698dd9b2bbd",
				"dweb:/ipfs/QmQ6poZ9KXhpPMXYD5cDd1cFLdM1MqZsneiBvfXkyR8Xsk"
			]
		},
		"contracts/rock_paper_scissors.sol": {
			"keccak256": "0x1b4e8a3aa5a49f77f4c29cc9999b0c34f47c8afd17297c406e7fe9fca2a9e4df",
			"license": "MIT",
			"urls": [
				"bzz-raw://e612d89c65e8aad045c43efdbced08df92d7e99152a40ce7ebd802337ba956b6",
				"dweb:/ipfs/QmR84rEYQJkQeYFm5MYMhFqJnoZyBzco2pFVhYS6QgoGii"
			]
		},
		"utils/Context.sol": {
			"keccak256": "0x2c36c9489879b7c91cdd73bbe8b2584f401aa26f4f252c04f053e824d6ca75c6",
			"license": "MIT",
			"urls": [
				"bzz-raw://3ef20575fc12fd27f252acd28a8d0f65893832f29fd9c82f7ec165121af4572f",
				"dweb:/ipfs/QmZMCoWWDTjhs1CNFMWv4JNWVyyeuzyqteCHhF4heCUYJJ"
			]
		}
	},
	"version": 1
}